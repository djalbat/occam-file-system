"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createProjectEntry: function() {
        return createProjectEntry;
    },
    default: function() {
        return createProjectEntries;
    }
});
var _necessary = require("necessary");
var concatenatePaths = _necessary.pathUtilities.concatenatePaths, checkEntryExists = _necessary.fileSystemUtilities.checkEntryExists, createFile = _necessary.fileSystemUtilities.createFile, createDirectory = _necessary.fileSystemUtilities.createDirectory;
function createProjectEntries(projectsDirectoryPath, json, callback) {
    var pathMaps = json.pathMaps;
    pathMaps.forEach(function(pathMap) {
        createProjectEntry(projectsDirectoryPath, pathMap);
    });
    json = {
        pathMaps: pathMaps
    };
    callback(json);
}
function createProjectEntry(projectsDirectoryPath, pathMap) {
    var targetEntryPath = pathMap.targetEntryPath, absoluteTargetEntryPath = concatenatePaths(projectsDirectoryPath, targetEntryPath), targetEntryExists = checkEntryExists(absoluteTargetEntryPath);
    if (targetEntryExists) {
        var targetEntryPath1 = null;
        Object.assign(pathMap, {
            targetEntryPath: targetEntryPath1
        });
        return;
    }
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? createProjectDirectory(projectsDirectoryPath, pathMap) : createProjectFile(projectsDirectoryPath, pathMap);
}
function createProjectFile(projectsDirectoryPath, pathMap) {
    var targetEntryPath = pathMap.targetEntryPath, targetFilePath = targetEntryPath, absoluteTargetFilePath = concatenatePaths(projectsDirectoryPath, targetFilePath);
    try {
        var filePath = absoluteTargetFilePath; ///
        createFile(filePath);
    } catch (error) {
        var targetEntryPath1 = null;
        Object.assign(pathMap, {
            targetEntryPath: targetEntryPath1
        });
    }
}
function createProjectDirectory(projectsDirectoryPath, pathMap) {
    var targetEntryPath = pathMap.targetEntryPath, targetDirectoryPath = targetEntryPath, absoluteTargetDirectoryPath = concatenatePaths(projectsDirectoryPath, targetDirectoryPath);
    try {
        var directoryPath = absoluteTargetDirectoryPath; ///
        createDirectory(directoryPath);
    } catch (error) {
        var targetEntryPath1 = null;
        Object.assign(pathMap, {
            targetEntryPath: targetEntryPath1
        });
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jcmVhdGVQcm9qZWN0RW50cmllcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcGF0aFV0aWxpdGllcywgZmlsZVN5c3RlbVV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuY29uc3QgeyBjb25jYXRlbmF0ZVBhdGhzIH0gPSBwYXRoVXRpbGl0aWVzLFxuICAgICAgeyBjaGVja0VudHJ5RXhpc3RzLCBjcmVhdGVGaWxlOiBjcmVhdGVGaWxlLCBjcmVhdGVEaXJlY3Rvcnk6IGNyZWF0ZURpcmVjdG9yeSB9ID0gZmlsZVN5c3RlbVV0aWxpdGllcztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlUHJvamVjdEVudHJpZXMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBqc29uLCBjYWxsYmFjaykge1xuICBjb25zdCB7IHBhdGhNYXBzIH0gPSBqc29uO1xuXG4gIHBhdGhNYXBzLmZvckVhY2goKHBhdGhNYXApID0+IHtcbiAgICBjcmVhdGVQcm9qZWN0RW50cnkocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBwYXRoTWFwKTtcbiAgfSk7XG5cbiAganNvbiA9IHtcbiAgICBwYXRoTWFwc1xuICB9O1xuXG4gIGNhbGxiYWNrKGpzb24pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvamVjdEVudHJ5KHByb2plY3RzRGlyZWN0b3J5UGF0aCwgcGF0aE1hcCkge1xuICBjb25zdCB7IHRhcmdldEVudHJ5UGF0aCB9ID0gcGF0aE1hcCxcbiAgICAgICAgYWJzb2x1dGVUYXJnZXRFbnRyeVBhdGggPSBjb25jYXRlbmF0ZVBhdGhzKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgdGFyZ2V0RW50cnlQYXRoKSxcbiAgICAgICAgdGFyZ2V0RW50cnlFeGlzdHMgPSBjaGVja0VudHJ5RXhpc3RzKGFic29sdXRlVGFyZ2V0RW50cnlQYXRoKTtcblxuICBpZiAodGFyZ2V0RW50cnlFeGlzdHMpIHtcbiAgICBjb25zdCB0YXJnZXRFbnRyeVBhdGggPSBudWxsO1xuXG4gICAgT2JqZWN0LmFzc2lnbihwYXRoTWFwLCB7XG4gICAgICB0YXJnZXRFbnRyeVBhdGhcbiAgICB9KTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHsgZW50cnlEaXJlY3RvcnkgfSA9IHBhdGhNYXA7XG5cbiAgZW50cnlEaXJlY3RvcnkgP1xuICAgIGNyZWF0ZVByb2plY3REaXJlY3RvcnkocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBwYXRoTWFwKSA6XG4gICAgICBjcmVhdGVQcm9qZWN0RmlsZShwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHBhdGhNYXApO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVQcm9qZWN0RmlsZShwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHBhdGhNYXApIHtcbiAgY29uc3QgeyB0YXJnZXRFbnRyeVBhdGggfSA9IHBhdGhNYXAsXG4gICAgICAgIHRhcmdldEZpbGVQYXRoID0gdGFyZ2V0RW50cnlQYXRoLCAvLy9cbiAgICAgICAgYWJzb2x1dGVUYXJnZXRGaWxlUGF0aCA9IGNvbmNhdGVuYXRlUGF0aHMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCB0YXJnZXRGaWxlUGF0aCk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBmaWxlUGF0aCA9IGFic29sdXRlVGFyZ2V0RmlsZVBhdGg7ICAvLy9cblxuICAgIGNyZWF0ZUZpbGUoZmlsZVBhdGgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnN0IHRhcmdldEVudHJ5UGF0aCA9IG51bGw7XG5cbiAgICBPYmplY3QuYXNzaWduKHBhdGhNYXAsIHtcbiAgICAgIHRhcmdldEVudHJ5UGF0aFxuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVByb2plY3REaXJlY3RvcnkocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBwYXRoTWFwKSB7XG4gIGNvbnN0IHsgdGFyZ2V0RW50cnlQYXRoIH0gPSBwYXRoTWFwLFxuICAgICAgICB0YXJnZXREaXJlY3RvcnlQYXRoID0gdGFyZ2V0RW50cnlQYXRoLCAvLy9cbiAgICAgICAgYWJzb2x1dGVUYXJnZXREaXJlY3RvcnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHRhcmdldERpcmVjdG9yeVBhdGgpO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgZGlyZWN0b3J5UGF0aCA9IGFic29sdXRlVGFyZ2V0RGlyZWN0b3J5UGF0aDsgIC8vL1xuXG4gICAgY3JlYXRlRGlyZWN0b3J5KGRpcmVjdG9yeVBhdGgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnN0IHRhcmdldEVudHJ5UGF0aCA9IG51bGw7XG5cbiAgICBPYmplY3QuYXNzaWduKHBhdGhNYXAsIHtcbiAgICAgIHRhcmdldEVudHJ5UGF0aFxuICAgIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlUHJvamVjdEVudHJ5IiwiY3JlYXRlUHJvamVjdEVudHJpZXMiLCJjb25jYXRlbmF0ZVBhdGhzIiwicGF0aFV0aWxpdGllcyIsImNoZWNrRW50cnlFeGlzdHMiLCJmaWxlU3lzdGVtVXRpbGl0aWVzIiwiY3JlYXRlRmlsZSIsImNyZWF0ZURpcmVjdG9yeSIsInByb2plY3RzRGlyZWN0b3J5UGF0aCIsImpzb24iLCJjYWxsYmFjayIsInBhdGhNYXBzIiwiZm9yRWFjaCIsInBhdGhNYXAiLCJ0YXJnZXRFbnRyeVBhdGgiLCJhYnNvbHV0ZVRhcmdldEVudHJ5UGF0aCIsInRhcmdldEVudHJ5RXhpc3RzIiwiT2JqZWN0IiwiYXNzaWduIiwiZW50cnlEaXJlY3RvcnkiLCJjcmVhdGVQcm9qZWN0RGlyZWN0b3J5IiwiY3JlYXRlUHJvamVjdEZpbGUiLCJ0YXJnZXRGaWxlUGF0aCIsImFic29sdXRlVGFyZ2V0RmlsZVBhdGgiLCJmaWxlUGF0aCIsImVycm9yIiwidGFyZ2V0RGlyZWN0b3J5UGF0aCIsImFic29sdXRlVGFyZ2V0RGlyZWN0b3J5UGF0aCIsImRpcmVjdG9yeVBhdGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQXFCZ0JBLGtCQUFrQjtlQUFsQkE7O0lBZGhCLE9BWUM7ZUFadUJDOzs7eUJBTDJCO0FBRW5ELElBQU0sQUFBRUMsbUJBQXFCQyx3QkFBYSxDQUFsQ0Qsa0JBQ0FFLG1CQUErRUMsOEJBQW1CLENBQWxHRCxrQkFBa0JFLEFBQVlBLGFBQWlERCw4QkFBbUIsQ0FBaEZDLFlBQXdCQyxBQUFpQkEsa0JBQW9CRiw4QkFBbUIsQ0FBeERFO0FBRW5DLFNBQVNOLHFCQUFxQk8scUJBQXFCLEVBQUVDLElBQUksRUFBRUMsUUFBUTtJQUNoRixJQUFNLEFBQUVDLFdBQWFGLEtBQWJFO0lBRVJBLFNBQVNDLE9BQU8sQ0FBQyxTQUFDQztRQUNoQmIsbUJBQW1CUSx1QkFBdUJLO0lBQzVDO0lBRUFKLE9BQU87UUFDTEUsVUFBQUE7SUFDRjtJQUVBRCxTQUFTRDtBQUNYO0FBRU8sU0FBU1QsbUJBQW1CUSxxQkFBcUIsRUFBRUssT0FBTztJQUMvRCxJQUFNLEFBQUVDLGtCQUFvQkQsUUFBcEJDLGlCQUNGQywwQkFBMEJiLGlCQUFpQk0sdUJBQXVCTSxrQkFDbEVFLG9CQUFvQlosaUJBQWlCVztJQUUzQyxJQUFJQyxtQkFBbUI7UUFDckIsSUFBTUYsbUJBQWtCO1FBRXhCRyxPQUFPQyxNQUFNLENBQUNMLFNBQVM7WUFDckJDLGlCQUFBQTtRQUNGO1FBRUE7SUFDRjtJQUVBLElBQU0sQUFBRUssaUJBQW1CTixRQUFuQk07SUFFUkEsaUJBQ0VDLHVCQUF1QlosdUJBQXVCSyxXQUM1Q1Esa0JBQWtCYix1QkFBdUJLO0FBQy9DO0FBRUEsU0FBU1Esa0JBQWtCYixxQkFBcUIsRUFBRUssT0FBTztJQUN2RCxJQUFNLEFBQUVDLGtCQUFvQkQsUUFBcEJDLGlCQUNGUSxpQkFBaUJSLGlCQUNqQlMseUJBQXlCckIsaUJBQWlCTSx1QkFBdUJjO0lBRXZFLElBQUk7UUFDRixJQUFNRSxXQUFXRCx3QkFBeUIsR0FBRztRQUU3Q2pCLFdBQVdrQjtJQUNiLEVBQUUsT0FBT0MsT0FBTztRQUNkLElBQU1YLG1CQUFrQjtRQUV4QkcsT0FBT0MsTUFBTSxDQUFDTCxTQUFTO1lBQ3JCQyxpQkFBQUE7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxTQUFTTSx1QkFBdUJaLHFCQUFxQixFQUFFSyxPQUFPO0lBQzVELElBQU0sQUFBRUMsa0JBQW9CRCxRQUFwQkMsaUJBQ0ZZLHNCQUFzQlosaUJBQ3RCYSw4QkFBOEJ6QixpQkFBaUJNLHVCQUF1QmtCO0lBRTVFLElBQUk7UUFDRixJQUFNRSxnQkFBZ0JELDZCQUE4QixHQUFHO1FBRXZEcEIsZ0JBQWdCcUI7SUFDbEIsRUFBRSxPQUFPSCxPQUFPO1FBQ2QsSUFBTVgsbUJBQWtCO1FBRXhCRyxPQUFPQyxNQUFNLENBQUNMLFNBQVM7WUFDckJDLGlCQUFBQTtRQUNGO0lBQ0Y7QUFDRiJ9