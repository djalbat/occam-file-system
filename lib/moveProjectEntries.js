"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return moveProjectEntries;
    },
    moveProjectEntry: function() {
        return moveProjectEntry;
    }
});
var _necessary = require("necessary");
var _removeProjectEntries = require("./removeProjectEntries");
var concatenatePaths = _necessary.pathUtilities.concatenatePaths, moveFile = _necessary.fileSystemUtilities.moveFile, moveDirectory = _necessary.fileSystemUtilities.moveDirectory;
function moveProjectEntries(projectsDirectoryPath, json, callback) {
    var pathMaps = json.pathMaps;
    pathMaps.forEach(function(pathMap) {
        moveProjectEntry(pathMap);
    });
    json = {
        pathMaps: pathMaps
    };
    callback(json);
}
function moveProjectEntry(projectsDirectoryPath, pathMap) {
    var sourcePath = pathMap.sourcePath;
    if (sourcePath === null) {
        return;
    }
    var targetPath = pathMap.targetPath;
    if (targetPath === null) {
        (0, _removeProjectEntries.removeProjectEntry)(projectsDirectoryPath, pathMap);
        return;
    }
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? moveProjectDirectory(projectsDirectoryPath, pathMap) : moveProjectFile(projectsDirectoryPath, pathMap);
}
function moveProjectFile(projectsDirectoryPath, pathMap) {
    var sourceEntryPath = pathMap.sourceEntryPath, targetEntryPath = pathMap.targetEntryPath, sourceFilePath = sourceEntryPath, targetFilePath = targetEntryPath, absoluteSourceFilePath = concatenatePaths(projectsDirectoryPath, sourceFilePath), absoluteTargetFilePath = concatenatePaths(projectsDirectoryPath, targetFilePath);
    try {
        var oldFilePath = absoluteSourceFilePath, newFilePath = absoluteTargetFilePath; ///
        moveFile(oldFilePath, newFilePath);
    } catch (error) {
        var sourceEntryPath1 = null;
        Object.assign(pathMap, {
            sourceEntryPath: sourceEntryPath1
        });
    }
}
function moveProjectDirectory(projectsDirectoryPath, pathMap) {
    var sourceEntryPath = pathMap.sourceEntryPath, targetEntryPath = pathMap.targetEntryPath, sourceDirectoryPath = sourceEntryPath, targetDirectoryPath = targetEntryPath, absoluteSourceDirectoryPath = concatenatePaths(projectsDirectoryPath, sourceDirectoryPath), absoluteTargetDirectoryPath = concatenatePaths(projectsDirectoryPath, targetDirectoryPath);
    try {
        var oldDirectoryPath = absoluteSourceDirectoryPath, newDirectoryPath = absoluteTargetDirectoryPath; ///
        moveDirectory(oldDirectoryPath, newDirectoryPath);
    } catch (error) {
        var sourceEntryPath1 = null;
        Object.assign(pathMap, {
            sourceEntryPath: sourceEntryPath1
        });
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tb3ZlUHJvamVjdEVudHJpZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHBhdGhVdGlsaXRpZXMsIGZpbGVTeXN0ZW1VdGlsaXRpZXMgfSBmcm9tIFwibmVjZXNzYXJ5XCI7XG5cbmltcG9ydCB7IHJlbW92ZVByb2plY3RFbnRyeSB9IGZyb20gXCIuL3JlbW92ZVByb2plY3RFbnRyaWVzXCI7XG5cbmNvbnN0IHsgY29uY2F0ZW5hdGVQYXRocyB9ID0gcGF0aFV0aWxpdGllcyxcbiAgICAgIHsgbW92ZUZpbGU6IG1vdmVGaWxlLCBtb3ZlRGlyZWN0b3J5OiBtb3ZlRGlyZWN0b3J5IH0gPSBmaWxlU3lzdGVtVXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtb3ZlUHJvamVjdEVudHJpZXMocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBqc29uLCBjYWxsYmFjaykge1xuICBjb25zdCB7IHBhdGhNYXBzIH0gPSBqc29uO1xuXG4gIHBhdGhNYXBzLmZvckVhY2goKHBhdGhNYXApID0+IHtcbiAgICBtb3ZlUHJvamVjdEVudHJ5KHBhdGhNYXApO1xuICB9KTtcblxuICBqc29uID0ge1xuICAgIHBhdGhNYXBzXG4gIH07XG5cbiAgY2FsbGJhY2soanNvbik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlUHJvamVjdEVudHJ5KHByb2plY3RzRGlyZWN0b3J5UGF0aCwgcGF0aE1hcCkge1xuICBjb25zdCB7IHNvdXJjZVBhdGggfSA9IHBhdGhNYXA7XG5cbiAgaWYgKHNvdXJjZVBhdGggPT09IG51bGwpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCB7IHRhcmdldFBhdGggfSA9IHBhdGhNYXA7XG5cbiAgaWYgKHRhcmdldFBhdGggPT09IG51bGwpIHtcbiAgICByZW1vdmVQcm9qZWN0RW50cnkocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBwYXRoTWFwKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHsgZW50cnlEaXJlY3RvcnkgfSA9IHBhdGhNYXA7XG5cbiAgZW50cnlEaXJlY3RvcnkgP1xuICAgIG1vdmVQcm9qZWN0RGlyZWN0b3J5KHByb2plY3RzRGlyZWN0b3J5UGF0aCwgcGF0aE1hcCkgOlxuICAgICAgbW92ZVByb2plY3RGaWxlKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgcGF0aE1hcCk7XG59XG5cbmZ1bmN0aW9uIG1vdmVQcm9qZWN0RmlsZShwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHBhdGhNYXApIHtcbiAgY29uc3QgeyBzb3VyY2VFbnRyeVBhdGgsIHRhcmdldEVudHJ5UGF0aCB9ID0gcGF0aE1hcCxcbiAgICAgICAgc291cmNlRmlsZVBhdGggPSBzb3VyY2VFbnRyeVBhdGgsIC8vL1xuICAgICAgICB0YXJnZXRGaWxlUGF0aCA9IHRhcmdldEVudHJ5UGF0aCwgLy8vXG4gICAgICAgIGFic29sdXRlU291cmNlRmlsZVBhdGggPSBjb25jYXRlbmF0ZVBhdGhzKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgc291cmNlRmlsZVBhdGgpLFxuICAgICAgICBhYnNvbHV0ZVRhcmdldEZpbGVQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHRhcmdldEZpbGVQYXRoKTtcblxuICB0cnkge1xuICAgIGNvbnN0IG9sZEZpbGVQYXRoID0gYWJzb2x1dGVTb3VyY2VGaWxlUGF0aCwgLy8vXG4gICAgICAgICAgbmV3RmlsZVBhdGggPSBhYnNvbHV0ZVRhcmdldEZpbGVQYXRoOyAvLy9cblxuICAgIG1vdmVGaWxlKG9sZEZpbGVQYXRoLCBuZXdGaWxlUGF0aCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3Qgc291cmNlRW50cnlQYXRoID0gbnVsbDtcblxuICAgIE9iamVjdC5hc3NpZ24ocGF0aE1hcCwge1xuICAgICAgc291cmNlRW50cnlQYXRoXG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbW92ZVByb2plY3REaXJlY3RvcnkocHJvamVjdHNEaXJlY3RvcnlQYXRoLCBwYXRoTWFwKSB7XG4gIGNvbnN0IHsgc291cmNlRW50cnlQYXRoLCB0YXJnZXRFbnRyeVBhdGggfSA9IHBhdGhNYXAsXG4gICAgICAgIHNvdXJjZURpcmVjdG9yeVBhdGggPSBzb3VyY2VFbnRyeVBhdGgsIC8vL1xuICAgICAgICB0YXJnZXREaXJlY3RvcnlQYXRoID0gdGFyZ2V0RW50cnlQYXRoLCAvLy9cbiAgICAgICAgYWJzb2x1dGVTb3VyY2VEaXJlY3RvcnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0c0RpcmVjdG9yeVBhdGgsIHNvdXJjZURpcmVjdG9yeVBhdGgpLFxuICAgICAgICBhYnNvbHV0ZVRhcmdldERpcmVjdG9yeVBhdGggPSBjb25jYXRlbmF0ZVBhdGhzKHByb2plY3RzRGlyZWN0b3J5UGF0aCwgdGFyZ2V0RGlyZWN0b3J5UGF0aCk7XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBvbGREaXJlY3RvcnlQYXRoID0gYWJzb2x1dGVTb3VyY2VEaXJlY3RvcnlQYXRoLCAvLy9cbiAgICAgICAgICBuZXdEaXJlY3RvcnlQYXRoID0gYWJzb2x1dGVUYXJnZXREaXJlY3RvcnlQYXRoOyAvLy9cblxuICAgIG1vdmVEaXJlY3Rvcnkob2xkRGlyZWN0b3J5UGF0aCwgbmV3RGlyZWN0b3J5UGF0aCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3Qgc291cmNlRW50cnlQYXRoID0gbnVsbDtcblxuICAgIE9iamVjdC5hc3NpZ24ocGF0aE1hcCwge1xuICAgICAgc291cmNlRW50cnlQYXRoXG4gICAgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb3ZlUHJvamVjdEVudHJpZXMiLCJtb3ZlUHJvamVjdEVudHJ5IiwiY29uY2F0ZW5hdGVQYXRocyIsInBhdGhVdGlsaXRpZXMiLCJtb3ZlRmlsZSIsImZpbGVTeXN0ZW1VdGlsaXRpZXMiLCJtb3ZlRGlyZWN0b3J5IiwicHJvamVjdHNEaXJlY3RvcnlQYXRoIiwianNvbiIsImNhbGxiYWNrIiwicGF0aE1hcHMiLCJmb3JFYWNoIiwicGF0aE1hcCIsInNvdXJjZVBhdGgiLCJ0YXJnZXRQYXRoIiwicmVtb3ZlUHJvamVjdEVudHJ5IiwiZW50cnlEaXJlY3RvcnkiLCJtb3ZlUHJvamVjdERpcmVjdG9yeSIsIm1vdmVQcm9qZWN0RmlsZSIsInNvdXJjZUVudHJ5UGF0aCIsInRhcmdldEVudHJ5UGF0aCIsInNvdXJjZUZpbGVQYXRoIiwidGFyZ2V0RmlsZVBhdGgiLCJhYnNvbHV0ZVNvdXJjZUZpbGVQYXRoIiwiYWJzb2x1dGVUYXJnZXRGaWxlUGF0aCIsIm9sZEZpbGVQYXRoIiwibmV3RmlsZVBhdGgiLCJlcnJvciIsIk9iamVjdCIsImFzc2lnbiIsInNvdXJjZURpcmVjdG9yeVBhdGgiLCJ0YXJnZXREaXJlY3RvcnlQYXRoIiwiYWJzb2x1dGVTb3VyY2VEaXJlY3RvcnlQYXRoIiwiYWJzb2x1dGVUYXJnZXREaXJlY3RvcnlQYXRoIiwib2xkRGlyZWN0b3J5UGF0aCIsIm5ld0RpcmVjdG9yeVBhdGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQVNBLE9BWUM7ZUFadUJBOztJQWNSQyxnQkFBZ0I7ZUFBaEJBOzs7eUJBckJtQztvQ0FFaEI7QUFFbkMsSUFBTSxBQUFFQyxtQkFBcUJDLHdCQUFhLENBQWxDRCxrQkFDQUUsQUFBVUEsV0FBMkNDLDhCQUFtQixDQUF4RUQsVUFBb0JFLEFBQWVBLGdCQUFrQkQsOEJBQW1CLENBQXBEQztBQUViLFNBQVNOLG1CQUFtQk8scUJBQXFCLEVBQUVDLElBQUksRUFBRUMsUUFBUTtJQUM5RSxJQUFNLEFBQUVDLFdBQWFGLEtBQWJFO0lBRVJBLFNBQVNDLE9BQU8sQ0FBQyxTQUFDQztRQUNoQlgsaUJBQWlCVztJQUNuQjtJQUVBSixPQUFPO1FBQ0xFLFVBQUFBO0lBQ0Y7SUFFQUQsU0FBU0Q7QUFDWDtBQUVPLFNBQVNQLGlCQUFpQk0scUJBQXFCLEVBQUVLLE9BQU87SUFDN0QsSUFBTSxBQUFFQyxhQUFlRCxRQUFmQztJQUVSLElBQUlBLGVBQWUsTUFBTTtRQUN2QjtJQUNGO0lBRUEsSUFBTSxBQUFFQyxhQUFlRixRQUFmRTtJQUVSLElBQUlBLGVBQWUsTUFBTTtRQUN2QkMsSUFBQUEsd0NBQWtCLEVBQUNSLHVCQUF1Qks7UUFFMUM7SUFDRjtJQUVBLElBQU0sQUFBRUksaUJBQW1CSixRQUFuQkk7SUFFUkEsaUJBQ0VDLHFCQUFxQlYsdUJBQXVCSyxXQUMxQ00sZ0JBQWdCWCx1QkFBdUJLO0FBQzdDO0FBRUEsU0FBU00sZ0JBQWdCWCxxQkFBcUIsRUFBRUssT0FBTztJQUNyRCxJQUFRTyxrQkFBcUNQLFFBQXJDTyxpQkFBaUJDLGtCQUFvQlIsUUFBcEJRLGlCQUNuQkMsaUJBQWlCRixpQkFDakJHLGlCQUFpQkYsaUJBQ2pCRyx5QkFBeUJyQixpQkFBaUJLLHVCQUF1QmMsaUJBQ2pFRyx5QkFBeUJ0QixpQkFBaUJLLHVCQUF1QmU7SUFFdkUsSUFBSTtRQUNGLElBQU1HLGNBQWNGLHdCQUNkRyxjQUFjRix3QkFBd0IsR0FBRztRQUUvQ3BCLFNBQVNxQixhQUFhQztJQUN4QixFQUFFLE9BQU9DLE9BQU87UUFDZCxJQUFNUixtQkFBa0I7UUFFeEJTLE9BQU9DLE1BQU0sQ0FBQ2pCLFNBQVM7WUFDckJPLGlCQUFBQTtRQUNGO0lBQ0Y7QUFDRjtBQUVBLFNBQVNGLHFCQUFxQlYscUJBQXFCLEVBQUVLLE9BQU87SUFDMUQsSUFBUU8sa0JBQXFDUCxRQUFyQ08saUJBQWlCQyxrQkFBb0JSLFFBQXBCUSxpQkFDbkJVLHNCQUFzQlgsaUJBQ3RCWSxzQkFBc0JYLGlCQUN0QlksOEJBQThCOUIsaUJBQWlCSyx1QkFBdUJ1QixzQkFDdEVHLDhCQUE4Qi9CLGlCQUFpQkssdUJBQXVCd0I7SUFFNUUsSUFBSTtRQUNGLElBQU1HLG1CQUFtQkYsNkJBQ25CRyxtQkFBbUJGLDZCQUE2QixHQUFHO1FBRXpEM0IsY0FBYzRCLGtCQUFrQkM7SUFDbEMsRUFBRSxPQUFPUixPQUFPO1FBQ2QsSUFBTVIsbUJBQWtCO1FBRXhCUyxPQUFPQyxNQUFNLENBQUNqQixTQUFTO1lBQ3JCTyxpQkFBQUE7UUFDRjtJQUNGO0FBQ0YifQ==